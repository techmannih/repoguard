name: Build and Create Release for repoguard

on:
    push:
        tags:
            - 'v*.*.*'

permissions:
    contents: write

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '18'

            - name: Install dependencies
              run: npm install

            - name: Build binaries
              run: npm run build

            - name: Upload binaries as artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: binaries
                  path: ./dist

    release:
        needs: build
        runs-on: ubuntu-latest

        steps:
            - name: Download binaries
              uses: actions/download-artifact@v3
              with:
                  name: binaries

            - name: Create GitHub Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  body: |
                      Release notes for ${{ github.ref }}
                  draft: false
                  prerelease: false

            - name: Upload Linux Binary
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./dist/repoguard-linux
                  asset_name: repoguard-linux
                  asset_content_type: application/octet-stream

            - name: Upload macOS Binary
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./dist/repoguard-macos
                  asset_name: repoguard-macos
                  asset_content_type: application/octet-stream

            - name: Upload Windows Binary
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./dist/repoguard-win.exe
                  asset_name: repoguard-win.exe
                  asset_content_type: application/octet-stream
